Tx	db_nimternalsql/tx.html#Tx	tx: Tx	
newTx	db_nimternalsql/tx.html#newTx,string,File	tx: newTx(logPath: string; file: File): Tx	
createBaseTable	db_nimternalsql/tx.html#createBaseTable,Tx,Database,string,openArray[ColumnDef],seq[string]	tx: createBaseTable(tx: Tx; db: Database; name: string;\n                columns: openArray[ColumnDef]; key: seq[string]): BaseTable	
dropBaseTable	db_nimternalsql/tx.html#dropBaseTable,Tx,Database,string	tx: dropBaseTable(tx: Tx; db: Database; name: string)	
insert	db_nimternalsql/tx.html#insert,Tx,BaseTable,seq[NqValue]	tx: insert(tx: Tx; table: BaseTable; values: seq[NqValue])	
delete	db_nimternalsql/tx.html#delete,Tx,BaseTable,Expression,openArray[string]	tx: delete(tx: Tx; table: BaseTable; whereExp: Expression; args: openArray[string]): int64	
update	db_nimternalsql/tx.html#update,Tx,BaseTable,seq[ColumnAssignment],Expression,openArray[string]	tx: update(tx: Tx; table: BaseTable; assignments: seq[ColumnAssignment];\n       whereExp: Expression; args: openArray[string]): int64	
commit	db_nimternalsql/tx.html#commit,Tx	tx: commit(tx: Tx)	
rollback	db_nimternalsql/tx.html#rollback,Tx,Database	tx: rollback(tx: Tx; db: Database)	
openLog	db_nimternalsql/tx.html#openLog,string,Database	tx: openLog(logdir: string; db: Database): File	
closeLog	db_nimternalsql/tx.html#closeLog,Tx	tx: closeLog(tx: Tx)	
logIsActive	db_nimternalsql/tx.html#logIsActive,Tx	tx: logIsActive(tx: Tx): bool	
truncateLog	db_nimternalsql/tx.html#truncateLog,Tx	tx: truncateLog(tx: Tx)	
